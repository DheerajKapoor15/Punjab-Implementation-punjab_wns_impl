input {
    jdbc {
        jdbc_connection_string => "jdbc:postgresql://punjab-prod-read-rds.c7gelbottzkp.ap-south-1.rds.amazonaws.com:5432/punjab_prod_app"
        jdbc_user => "<input db user name here>"
        jdbc_password => "<input db user password here>"
        jdbc_validate_connection => true
	jdbc_driver_library => "/home/ubuntu/logstash-6.5.1/jdbc/postgresql-9.4.1212.jar"
	jdbc_driver_class => "org.postgresql.Driver"
	statement => "select (select code from ${CITY_NAME}.eg_city)||'-'||pd.consumercode||'-'||right(left(pd.billingcycle, strpos(pd.billingcycle, 'Q') + 1), 12)||'-'||pd.servicetype as id, (select name from ${CITY_NAME}.eg_city) as cityName, (select code from ${CITY_NAME}.eg_city) as cityCode, (select grade from ${CITY_NAME}.eg_city) as cityGrade, (select districtname from ${CITY_NAME}.eg_city) as districtName, (select regionname from ${CITY_NAME}.eg_city) as regionName, pd.consumercode as consumerCode, pd.servicetype as serviceType, zone.name as zone, block.name as block, locality.name as locality, right(left(pd.billingcycle, strpos(pd.billingcycle, 'Q') + 1), 12) as installmentFrom, pd.projecteddemand as projecteddemand, conndetails.connectionstatus as connectionStatus, CASE (select value from ${CITY_NAME}.eg_appconfig_values where key_id in (select id from ${CITY_NAME}.eg_appconfig where key_name ='IS_PWSSB_ULB')) WHEN 'YES' THEN true ELSE false END as pwssb from ${CITY_NAME}.egwtr_projecteddemand pd,${CITY_NAME}.eg_boundary locality, ${CITY_NAME}.eg_boundary zone, ${CITY_NAME}.eg_boundary block,${CITY_NAME}.egwtr_connection conn, ${CITY_NAME}.egwtr_connectiondetails conndetails where block.id=conn.block and locality.id=conn.locality and zone.id=conn.zone and conn.id=conndetails.connection and conn.consumercode=pd.consumercode and pd.servicetype='Water Charges' UNION select (select code from ${CITY_NAME}.eg_city)||'-'||pd.consumercode||'-'||right(left(pd.billingcycle, strpos(pd.billingcycle, 'Q') + 1), 12)||'-'||pd.servicetype as id, (select name from ${CITY_NAME}.eg_city) as cityName, (select code from ${CITY_NAME}.eg_city) as cityCode, (select grade from ${CITY_NAME}.eg_city) as cityGrade, (select districtname from ${CITY_NAME}.eg_city) as districtName, (select regionname from ${CITY_NAME}.eg_city) as regionName, pd.consumercode as consumerCode, pd.servicetype as serviceType, zone.name as zone, block.name as block, locality.name as locality, right(left(pd.billingcycle, strpos(pd.billingcycle, 'Q') + 1), 12) as installmentFrom, pd.projecteddemand as projecteddemand, conn.status as connectionStatus, CASE (select value from ${CITY_NAME}.eg_appconfig_values where key_id in (select id from ${CITY_NAME}.eg_appconfig where key_name ='IS_PWSSB_ULB')) WHEN 'YES' THEN true ELSE false END as pwssb from ${CITY_NAME}.egwtr_projecteddemand pd,${CITY_NAME}.eg_boundary locality, ${CITY_NAME}.eg_boundary zone, ${CITY_NAME}.eg_boundary block,${CITY_NAME}.egswtax_connection conn where block.id=conn.block and locality.id=conn.locality and zone.id=conn.zone and conn.shsc_number=pd.consumercode and pd.servicetype='Sewerage Charges'"
	}
}
filter {
  mutate {
    add_field => {
      "city" => "${CITY_NAME}"
    }
  }
}
output {
  elasticsearch {
    hosts => "localhost:9200"
    index => "projecteddemand-consumers"
    document_type => "projecteddemand-consumers"
    document_id => "%{id}"
  }
}

